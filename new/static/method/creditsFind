//******************************************************************************
// - ProgramName: Freight_management.creditsFind
// - Description: 运价管理系统.信息管理查询
// - Create Time: 2018-01-04 03:41:28 (UTC)
// - Author Name: th
// - 青岛世隆软件有限公司　　版权所有
//******************************************************************************

program creditsFind;

uses
  System.SysUtils;

function Execute(Application: TWebServerApplication; request: TiPlatformRestRequest;
                 session: TWebSession; RequestParam: TWebRequestParam;
                 const AMethodName, AURI: UTF8Str; const inputDoc: Variant;
                 var Handled: Boolean; var AHttpStatus: Integer;
                 var err: TWebError; var json_value: Variant): Boolean;
var
  vd: TVariantDoc;
  vv,ss: Variant;
  i: Integer;
  sqlText,U: UTF8Str;
  bFirst: Boolean;
  rows,rows2: ISQLDBRows;
  TABLE:UTF8Str;
  _pid: Integer;
  qry: ISQLDBStatement;
  PageNo,PageSize,PageCount,RowCount,PageStart,PageEnd,PriorPage,NextPage:integer; 
begin
  //_ObjAddProps(['sql',entityid], json_value);
  // 数字使用InputIntOrVoid
  // 字符串使用InputUTF8OrVoid
  if RequestParam.URIMethod =mGET then begin
  TABLE:='LcEles';  

    //if action='search' then begin
      sqlText:='select ID,LCELENO,LCELEDESC,IFCONST,RELATABLE,RELAKEYFLD,RELARESULTFLD,STATUS,REMARKS from '+TABLE;
      
      try
        // 获得返回数据集，即执行 Select
        qry := DBConn.CreateThreadSafeStatementPrepared(sqlText, true, true);
        if not Assigned(qry) then
          err.Error('Query=nil');
      except
        on E: Exception do begin
          err.Error('Error: ' + ToUTF8(E.Message));
        end;
      end;
      _pid:=1;//问号后面的第几个
      
       
      try
        qry.ExecutePrepared;
      except
        on E: Exception do begin
          err.Error('Error: ' + ToUTF8(E.Message));
        end;
      end;
      if err.IsError then
        exit;
      U:=qry.FetchAllAsJSON(true);
      SetCodePage(U, CP_UTF8, false);
      RowCount:=qry.ColumnInt(0);
    
      PageNo:=request.InputIntOrVoid['Page'];
      PageSize:=request.InputIntOrVoid['PageSize'];
      if PageSize=0 then
        PageSize:=10;
      pagecount:=RowCount div pagesize;
      if pagecount*pagesize < rowCount then
        pagecount:=pagecount+1;
      if PageNo<=1 then
        PageNo:=1
      else if PageNo>pagecount then
        PageNo:=pagecount;
     
      PageStart:=(PageNo-1)*PageSize+1;
      PageEnd:=PageNo*PageSize;
      if PageEnd>RowCount then
        PageEnd:=RowCount;
      //如果有值在前后加%
    TABLE:='LcEles';  
    sqlText:='select ID,LCELENO,LCELEDESC,IFCONST,RELATABLE,RELAKEYFLD,RELARESULTFLD,STATUS,REMARKS from '+TABLE;
      
    //从几到几
      sqlText:=sqlText+ '  rows ? to ?';
      try
        // 获得返回数据集，即执行 Select
        qry := DBConn.CreateThreadSafeStatementPrepared(sqlText, true, true);
        if not Assigned(qry) then
          err.Error('Query=nil');
      except
        on E: Exception do begin
          err.Error('Error: ' + ToUTF8(E.Message));
        end;
      end;
      _pid:=1;//问号后面的第几个
      
      qry.Bind(_pid, PageStart);
      Inc(_pid);
      qry.Bind(_pid, PageEnd);
    
      try
        qry.ExecutePrepared;
      except
        on E: Exception do begin
          err.Error('Error: ' + ToUTF8(E.Message));
        end;
      end;
      if err.IsError then
        exit;
      U:=qry.FetchAllAsJSON(true);
      SetCodePage(U, CP_UTF8, false);
      _ObjAddProps(['data', _JsonFast(U)], json_value);
      if PageNo=1 then
        PriorPage:=1
      else
        PriorPage:=PageNo-1;
      
      if PageNo+1>pagecount then
        NextPage:=pagecount
      else
        NextPage:=PageNo+1;
      
      _ObjAddProps([    
          'RowCount', RowCount, 
          'PageSize', PageSize,
          'Page', PageNo,
          'First', 1,
          'FirstPage', 1,
          'Prior', PriorPage,
          'Next', NextPage,
          'Last', pagecount,
          'Total', pagecount
        ], ss);
        _ObjAddProps(['pagging', ss], json_value);
   // end;   
  end;
end;                 
begin

end.